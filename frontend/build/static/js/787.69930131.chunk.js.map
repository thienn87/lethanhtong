{"version":3,"file":"static/js/787.69930131.chunk.js","mappings":"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","sources":["components/apps/transactionContent.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo, Suspense, lazy } from \"react\";\nimport { Button, Spinner } from \"@material-tailwind/react\";\nimport { format } from \"date-fns\";\nimport { Config } from \"../config\";\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\nimport { Toast } from \"../polaris/toast\";\nimport { useTuitionFeeData } from \"./hooks/useTuitionFeeData\";\nimport { usePaymentDistribution } from \"./hooks/usePaymentDistribution\";\nimport { useReceiptData } from \"./hooks/useReceiptData\";\n\nconst TransactionHeader = lazy(() => import(\"./transaction/TransactionHeader\"));\nconst TransactionTable = lazy(() => import(\"./transaction/TransactionTable\"));\nconst ReceiptView = lazy(() => import(\"./transaction/ReceiptView\"));\n\nconst MODAL_STATUS = {\n  UNSUBMITTED: \"unsubmitted\",\n  SUBMITTED: \"submitted\",\n  VIEWING_RECEIPT: \"viewing_receipt\",\n};\n\nconst TransactionContent = ({ data, onClose }) => {\n  const domain = Config();\n  const dataRef = useRef(data);\n  const [localIsSubmitting, setLocalIsSubmitting] = useState(false);\n  const [showReceipt, setShowReceipt] = useState(false);\n  const [noiDungHoaDown, setNoiDungHoaDown] = useState('');\n  const [selectedMaHP, setSelectedMaHP] = useState([]);\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const [mshs, setMshs] = useState(null);\n  const [showTable, setShowTable] = useState(false);\n  const [modalStatus, setModalStatus] = useState(MODAL_STATUS.UNSUBMITTED);\n  const [pendingInvoiceId, setPendingInvoiceId] = useState(null);\n  const [feesInitialized, setFeesInitialized] = useState(false);\n  const [processedFees, setProcessedFees] = useState([]);\n\n  // Preload TransactionTable and ReceiptView\n  useEffect(() => {\n    import(\"./transaction/TransactionTable\");\n    import(\"./transaction/ReceiptView\");\n  }, []);\n\n  const currentDay = useMemo(() => format(new Date(), \"dd/MM/yyyy\"), []);\n  const studentName = useMemo(() => {\n    return dataRef.current ? `${dataRef.current.sur_name} ${dataRef.current.name}` : \"\";\n  }, []);\n\n  useEffect(() => {\n    dataRef.current = data;\n    if (data?.mshs) {\n      setMshs(data.mshs);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    const handleBeforeUnload = (e) => {\n      if (pendingInvoiceId) {\n        e.preventDefault();\n        e.returnValue = \"Bạn có giao dịch chưa hoàn thành. Nếu rời khỏi trang, dữ liệu sẽ bị huỷ.\";\n        return e.returnValue;\n      }\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [pendingInvoiceId]);\n\n  useEffect(() => {\n    const handleUnload = () => {\n      if (pendingInvoiceId) {\n        const url = `${domain}/api/invoice/delete/${pendingInvoiceId}`;\n        navigator.sendBeacon(url, null);\n      }\n    };\n    window.addEventListener(\"unload\", handleUnload);\n    return () => {\n      window.removeEventListener(\"unload\", handleUnload);\n    };\n  }, [pendingInvoiceId, domain]);\n\n  const {\n    loading: feeDataLoading,\n    feeTable,\n    processedFees: hookProcessedFees,\n    currentMonth,\n    transactionId,\n    error: feeDataError,\n    fetchTuitionFeeData,\n    pendingInvoice,\n    totalFeeAmount,\n    deletePendingInvoice\n  } = useTuitionFeeData(mshs, true); // Pass true to indicate the modal is open\n  \n  // Initialize processedFees from the hook data\n  useEffect(() => {\n    if (\n      hookProcessedFees &&\n      Array.isArray(hookProcessedFees) &&\n      hookProcessedFees.length > 0 &&\n      !feesInitialized\n    ) {\n      const initializedFees = hookProcessedFees\n        .map(fee => ({\n          ...fee,\n          isChecked: true,\n          amount_paid: fee.amount_paid ?? fee.suggested_payment ?? 0,\n          note: fee.note ?? '',\n        }))\n        .sort((a, b) => {\n          const aIsHP = a.code && a.code.includes('HP');\n          const bIsHP = b.code && b.code.includes('HP');\n          if (aIsHP && !bIsHP) return -1;\n          if (!aIsHP && bIsHP) return 1;\n          return 0;\n        });\n      setProcessedFees(initializedFees);\n      setFeesInitialized(true);\n      if (initializedFees.length > 0 && currentMonth) {\n        const newSelectedMaHP = initializedFees.map(fee => fee.code);\n        setSelectedMaHP(newSelectedMaHP);\n        setNoiDungHoaDown(`THU ${newSelectedMaHP.join(\", \")} THÁNG ${currentMonth}`);\n      }\n    }\n  }, [hookProcessedFees, feesInitialized, currentMonth]);\n\n  // Fallback to feeTable.processedFees if hookProcessedFees is not available\n  useEffect(() => {\n    if (\n      !hookProcessedFees?.length &&\n      feeTable?.processedFees &&\n      Array.isArray(feeTable.processedFees) &&\n      feeTable.processedFees.length > 0 &&\n      !feesInitialized\n    ) {\n      console.log(\"Initializing fees from feeTable:\", feeTable.processedFees);\n      const initializedFees = feeTable.processedFees\n        .map(fee => ({\n          ...fee,\n          isChecked: true,\n          amount_paid: fee.amount_paid ?? fee.suggested_payment ?? 0,\n          note: fee.note ?? '',\n        }))\n        .sort((a, b) => {\n          const aIsHP = a.code && a.code.includes('HP');\n          const bIsHP = b.code && b.code.includes('HP');\n          if (aIsHP && !bIsHP) return -1;\n          if (!aIsHP && bIsHP) return 1;\n          return 0;\n        });\n      setProcessedFees(initializedFees);\n      setFeesInitialized(true);\n      if (initializedFees.length > 0 && currentMonth) {\n        const newSelectedMaHP = initializedFees.map(fee => fee.code);\n        setSelectedMaHP(newSelectedMaHP);\n        setNoiDungHoaDown(`THU ${newSelectedMaHP.join(\", \")} THÁNG ${currentMonth}`);\n      }\n    }\n  }, [feeTable, hookProcessedFees, feesInitialized, currentMonth]);\n\n  // Force fetch data if not loaded\n  useEffect(() => {\n    if (mshs && isInitialLoad && !feeDataLoading && !hookProcessedFees?.length && !feeTable?.processedFees?.length) {\n      console.log(\"Forcing data fetch for MSHS:\", mshs);\n      fetchTuitionFeeData(\"modal\");\n    }\n  }, [mshs, isInitialLoad, feeDataLoading, hookProcessedFees, feeTable, fetchTuitionFeeData]);\n\n  useEffect(() => {\n    if (pendingInvoice && pendingInvoice.id) {\n      setPendingInvoiceId(pendingInvoice.id);\n    }\n  }, [pendingInvoice]);\n\n  const {\n    totalPaymentAmount,\n    setTotalPaymentAmount,\n    distributePayment,\n    handleTotalPaymentChange\n  } = usePaymentDistribution(processedFees, setProcessedFees);\n\n  const prepareTransactionData = useCallback(() => {\n    return processedFees\n      .filter(fee => fee.isChecked)\n      .map(fee => {\n        const amountPaid = fee.isAmountModified \n          ? Number(fee.amount_paid) \n          : (fee.suggested_payment || 0);\n        if (fee.isNewRow) {\n          return {\n            code: fee.code,\n            amount: amountPaid,\n            note: fee.note || \"\",\n            name: fee.name || fee.code,\n            isNewRow: true,\n            groupcode: fee.groupcode || \"OTHER\"\n          };\n        }\n        return {\n          code: fee.code,\n          amount: amountPaid,\n          note: fee.note || \"\"\n        };\n      });\n  }, [processedFees]);\n\n  const {\n    receiptData,\n    receiptRef,\n    pdfLoading,\n    isSubmitting,\n    showToast: receiptShowToast,\n    setShowToast: setReceiptShowToast,\n    toastMessage: receiptToastMessage,\n    setToastMessage: setReceiptToastMessage,\n    handlePdfAction,\n    generateReceiptAndSubmit\n  } = useReceiptData({\n    studentData: dataRef.current,\n    transactionId,\n    currentMonth,\n    noiDungHoa: noiDungHoaDown,\n    totalFeeAmount,\n    processedFees,\n    prepareTransactionData,\n    domain,\n    pendingInvoiceId,\n    onSuccess: async (data) => {\n      setPendingInvoiceId(null);\n      await fetchTuitionFeeData(\"invoice\");\n      setModalStatus(MODAL_STATUS.SUBMITTED);\n    }\n  });\n  \n  // Sync toast states if needed\n  useEffect(() => {\n    if (receiptShowToast) {\n      setShowToast(true);\n      setToastMessage(receiptToastMessage);\n      \n      const timer = setTimeout(() => {\n        setShowToast(false);\n      }, 3000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [receiptShowToast, receiptToastMessage]);\n\n  const handleNoiDungChange = useCallback((event) => {\n    setNoiDungHoaDown(event.target.value);\n  }, []);\n\n  useEffect(() => {\n    if (processedFees && processedFees.length > 0) {\n      setIsInitialLoad(false);\n      setShowTable(true);\n    }\n  }, [processedFees]);\n\n  useEffect(() => {\n    if (showReceipt) {\n      setModalStatus(MODAL_STATUS.VIEWING_RECEIPT);\n    } else if (modalStatus === MODAL_STATUS.VIEWING_RECEIPT) {\n      setModalStatus(MODAL_STATUS.SUBMITTED);\n    }\n  }, [showReceipt, modalStatus]);\n\n  const handleCheck = useCallback((code, status) => {\n    setProcessedFees(prev => {\n      const newData = prev.map(fee =>\n        fee.code === code ? { ...fee, isChecked: status } : fee\n      );\n      const checkedFees = newData.filter(fee => fee.isChecked);\n      const newSelectedMaHP = checkedFees.map(fee => fee.code);\n      setSelectedMaHP(newSelectedMaHP);\n      if (checkedFees.length > 0 && currentMonth) {\n        setNoiDungHoaDown(`THU ${newSelectedMaHP.join(\", \")} THÁNG ${currentMonth}`);\n      } else {\n        setNoiDungHoaDown('');\n      }\n      return newData;\n    });\n  }, [currentMonth]);\n\n  const handlePaidAmount = useCallback((code, amount_paid) => {\n    setProcessedFees(prev => prev.map(fee =>\n      fee.code === code ? { ...fee, amount_paid, isAmountModified: true } : fee\n    ));\n  }, []);\n\n  const handleDebt = useCallback((code, default_amount) => {\n    setProcessedFees(prev => prev.map(fee =>\n      fee.code === code ? { ...fee, default_amount } : fee\n    ));\n  }, []);\n\n  const handleNote = useCallback((code, note) => {\n    setProcessedFees(prev => prev.map(fee =>\n      fee.code === code ? { ...fee, note } : fee\n    ));\n  }, []);\n\n  const handleFeeCode = useCallback((code, newCode) => {\n    setProcessedFees(prev => prev.map(fee =>\n      fee.code === code ? { ...fee, code: newCode } : fee\n    ));\n  }, []);\n\n  const handleFeeName = useCallback((code, name) => {\n    setProcessedFees(prev => prev.map(fee =>\n      fee.code === code ? { ...fee, name } : fee\n    ));\n  }, []);\n\n  const addNewRow = useCallback(() => {\n    setProcessedFees(prev => [\n      ...prev,\n      {\n        code: `OT-${Date.now()}`,\n        name: \"\",\n        default_amount: 0,\n        opening_debt_balance: 0,\n        remaining_amount: 0,\n        suggested_payment: 0,\n        amount_paid: 0,\n        isNewRow: true,\n        isChecked: true,\n        groupcode: \"OTHER\",\n        note: \"\",\n      },\n    ]);\n  }, []);\n\n  const handleSubmitTransaction = useCallback(async () => {\n    try {\n      if (!dataRef.current) {\n        console.error(\"No student data available\");\n        setToastMessage(\"Không có dữ liệu học sinh\");\n        setShowToast(true);\n        setTimeout(() => setShowToast(false), 3000);\n        return;\n      }\n      \n      const isChecked = processedFees.filter((fee) => fee.isChecked);\n      if (!isChecked.length) {\n        setToastMessage(\"Chọn học phí muốn thu\");\n        setShowToast(true);\n        setTimeout(() => setShowToast(false), 3000);\n        return;\n      }\n      \n      // Generate receipt and submit to API simultaneously\n      await generateReceiptAndSubmit();\n      \n      // Show the receipt\n      setModalStatus(MODAL_STATUS.VIEWING_RECEIPT);\n      setShowReceipt(true);\n      \n    } catch (error) {\n      console.error(\"Error in transaction submission:\", error.message);\n      setToastMessage(`Đã xảy ra lỗi: ${error.message}`);\n      setShowToast(true);\n      setTimeout(() => setShowToast(false), 3000);\n    }\n  }, [\n    dataRef,\n    processedFees,\n    generateReceiptAndSubmit,\n    setModalStatus,\n    setShowReceipt,\n    setToastMessage,\n    setShowToast\n  ]);\n\n  const submitPaymentAfterPreview = useCallback(async () => {\n    try {\n      setLocalIsSubmitting(true);\n      \n      const transactionData = prepareTransactionData();\n      const noiDung = noiDungHoaDown || `Thu ${selectedMaHP.join(\", \")} tháng ${currentMonth}`;\n      \n      const payload = {\n        invoice_id: transactionId,\n        invoice_details: noiDung,\n        mshs: dataRef.current.mshs,\n        transaction_data: transactionData,\n        month: currentMonth,\n        status: 'completed',\n        pending_invoice_id: pendingInvoiceId\n      };\n      \n      const response = await fetch(`${domain}/api/payment/process`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to process payment: ${response.statusText}`);\n      }\n      \n      const result = await response.json();\n      if (result.status !== 'success') {\n        throw new Error(result.message || 'Unknown error occurred');\n      }\n      \n      setPendingInvoiceId(null);\n      await fetchTuitionFeeData(\"invoice\");\n      setModalStatus(MODAL_STATUS.SUBMITTED);\n      \n      setToastMessage(\"Giao dịch đã được xử lý thành công\");\n      setShowToast(true);\n      setTimeout(() => setShowToast(false), 3000);\n      \n    } catch (error) {\n      console.error(\"API error:\", error.message);\n      setToastMessage(`Đã xảy ra lỗi khi cập nhật giao dịch: ${error.message}`);\n      setShowToast(true);\n      setTimeout(() => setShowToast(false), 3000);\n    } finally {\n      setLocalIsSubmitting(false);\n    }\n  }, [\n    domain,\n    prepareTransactionData,\n    noiDungHoaDown,\n    selectedMaHP,\n    currentMonth,\n    transactionId,\n    pendingInvoiceId,\n    fetchTuitionFeeData,\n    setModalStatus,\n    setToastMessage,\n    setShowToast\n  ]);\n\n  const formatCurrency = useCallback((amount) => {\n    if (!amount && amount !== 0) return \"0\";\n    return parseFloat(amount).toLocaleString(\"vi-VN\");\n  }, []);\n\n  if ((feeDataLoading && isInitialLoad) && !showReceipt) {\n    return (\n      <div className=\"flex flex-col items-center justify-center p-8\">\n        <Spinner className=\"h-12 w-12 text-violet-800\" />\n        <p className=\"mt-4 text-white\">Đang tải dữ liệu...</p>\n      </div>\n    );\n  }\n\n  if (feeDataError && !showReceipt) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"font-bold text-lg\">Lỗi</h3>\n          <Button\n            variant=\"text\"\n            color=\"blue-gray\"\n            onClick={onClose}\n            className=\"p-2 rounded-full hover:bg-gray-200 transition-colors\"\n          >\n            <XMarkIcon className=\"h-6 w-6\" />\n          </Button>\n        </div>\n        <div className=\"text-red-500 text-center\">\n          <p className=\"text-xl font-bold mb-2\">Lỗi khi tải dữ liệu</p>\n          <p>{feeDataError}</p>\n        </div>\n        <div className=\"flex justify-end mt-4\">\n          <Button\n            className=\"bg-gray-200 text-gray-700 hover:bg-gray-300 shadow-none\"\n            onClick={onClose}\n          >\n            Đóng\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!feeDataLoading && (!processedFees || processedFees.length === 0) && !showReceipt) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"font-bold text-lg\">Thông báo</h3>\n          <Button\n            variant=\"text\"\n            color=\"blue-gray\"\n            onClick={onClose}\n            className=\"p-2 rounded-full hover:bg-gray-200 transition-colors\"\n          >\n            <XMarkIcon className=\"h-6 w-6\" />\n          </Button>\n        </div>\n        <p className=\"text-gray-700 text-center py-4\">Không có dữ liệu học phí cho học sinh này.</p>\n        <div className=\"flex justify-end mt-4\">\n          <Button\n            className=\"bg-gray-200 text-gray-700 hover:bg-gray-300 shadow-none\"\n            onClick={onClose}\n          >\n            Đóng\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const canViewReceipt = modalStatus === MODAL_STATUS.SUBMITTED || \n                        (showTable && processedFees.some(fee => fee.isChecked));\n\n  return (\n    <div className=\"transition-opacity duration-300 ease-in-out\">\n      {!showReceipt ? (\n        <div className=\"bg-white rounded-lg shadow-md animate-fade-in\">\n          <div className=\"flex justify-between items-center p-4 border-b\">\n            <h3 className=\"font-bold text-lg\">Thu học phí</h3>\n            <Button\n              variant=\"text\"\n              color=\"blue-gray\"\n              onClick={onClose}\n              className=\"p-2 rounded-full hover:bg-gray-200 transition-colors\"\n            >\n              <XMarkIcon className=\"h-6 w-6\" />\n            </Button>\n          </div>\n          <div className=\"p-4 space-y-4\">\n            <Suspense fallback={<div className=\"flex justify-center py-4\"><Spinner className=\"h-8 w-8 text-violet-800\" /></div>}>\n              <TransactionHeader \n                studentName={studentName}\n                studentData={dataRef.current}\n                transactionId={transactionId}\n                currentDay={currentDay}\n                currentMonth={currentMonth}\n                noiDungHoaDown={noiDungHoaDown}\n                onNoiDungChange={handleNoiDungChange}\n              />\n            </Suspense>\n            {showTable ? (\n              <Suspense fallback={\n                <div className=\"w-full flex justify-center items-center py-8\">\n                  <Spinner className=\"h-8 w-8 text-violet-800\" />\n                </div>\n              }>\n                <TransactionTable \n                  processedFees={processedFees}\n                  feeTable={feeTable}\n                  handleCheck={handleCheck}\n                  handlePaidAmount={handlePaidAmount}\n                  handleDebt={handleDebt}\n                  handleNote={handleNote}\n                  handleFeeCode={handleFeeCode}\n                  handleFeeName={handleFeeName}\n                  formatCurrency={formatCurrency}\n                  addNewRow={addNewRow}\n                  totalPaymentAmount={totalPaymentAmount}\n                  setTotalPaymentAmount={setTotalPaymentAmount}\n                  distributePayment={distributePayment}\n                  handleTotalPaymentChange={handleTotalPaymentChange}\n                />\n              </Suspense>\n            ) : (\n              <div className=\"w-full flex justify-center items-center py-8\">\n                <Spinner className=\"h-8 w-8 text-violet-800\" />\n              </div>\n            )}\n          </div>\n          <div className=\"flex items-center justify-end p-4 gap-4 border-t bg-gray-50\">\n            <Button\n              className=\"bg-gray-200 text-gray-700 hover:bg-gray-300 shadow-none\"\n              onClick={onClose}\n            >\n              Đóng\n            </Button>\n            <Button\n              className={isSubmitting ? \"bg-violet-300 text-white shadow-md\" : \"bg-violet-700 hover:bg-violet-800 text-white shadow-md\"}\n              disabled={isSubmitting || !showTable || modalStatus === MODAL_STATUS.SUBMITTED}\n              onClick={() => {\n                if (!isSubmitting && modalStatus !== MODAL_STATUS.SUBMITTED) {\n                  handleSubmitTransaction();\n                }\n              }}\n            >\n              {modalStatus === MODAL_STATUS.SUBMITTED ? \"Đã thu học phí\" : \"Thu Học Phí\"}\n            </Button>\n            <Button\n              className={`${canViewReceipt ? \"bg-blue-600 hover:bg-blue-700\" : \"bg-blue-300\"} text-white shadow-md`}\n              disabled={!canViewReceipt}\n              onClick={() => setShowReceipt(true)}\n            >\n              In biên lai\n            </Button>\n          </div>\n        </div>\n      ) : (\n        <Suspense fallback={<div className=\"flex justify-center py-8\"><Spinner className=\"h-8 w-8 text-violet-800\" /></div>}>\n          <div className=\"animate-fade-in\">\n            <ReceiptView \n              onBack={() => setShowReceipt(false)}\n              onClose={onClose}\n              receiptRef={receiptRef}\n              receiptData={receiptData}\n              handlePdfAction={handlePdfAction}\n              pdfLoading={pdfLoading}\n              isSubmitting={isSubmitting}\n            />\n          </div>\n        </Suspense>\n      )}\n      {showToast && <Toast message={toastMessage} />}\n    </div>\n  );\n};\n\nexport default React.memo(TransactionContent);"],"names":["TransactionHeader","lazy","TransactionTable","ReceiptView","MODAL_STATUS","TransactionContent","_ref","data","onClose","domain","Config","dataRef","useRef","localIsSubmitting","setLocalIsSubmitting","useState","showReceipt","setShowReceipt","noiDungHoaDown","setNoiDungHoaDown","selectedMaHP","setSelectedMaHP","showToast","setShowToast","toastMessage","setToastMessage","isInitialLoad","setIsInitialLoad","mshs","setMshs","showTable","setShowTable","modalStatus","setModalStatus","pendingInvoiceId","setPendingInvoiceId","feesInitialized","setFeesInitialized","processedFees","setProcessedFees","useEffect","currentDay","useMemo","format","Date","studentName","current","sur_name","name","handleBeforeUnload","e","preventDefault","returnValue","window","addEventListener","removeEventListener","handleUnload","url","navigator","sendBeacon","loading","feeDataLoading","feeTable","hookProcessedFees","currentMonth","transactionId","error","feeDataError","fetchTuitionFeeData","pendingInvoice","totalFeeAmount","deletePendingInvoice","useTuitionFeeData","Array","isArray","length","initializedFees","map","fee","_ref2","_fee$amount_paid","_fee$note","isChecked","amount_paid","suggested_payment","note","sort","a","b","aIsHP","code","includes","bIsHP","newSelectedMaHP","join","console","log","_ref3","_fee$amount_paid2","_fee$note2","_feeTable$processedFe","id","totalPaymentAmount","setTotalPaymentAmount","distributePayment","handleTotalPaymentChange","usePaymentDistribution","prepareTransactionData","useCallback","filter","amountPaid","isAmountModified","Number","isNewRow","amount","groupcode","receiptData","receiptRef","pdfLoading","isSubmitting","receiptShowToast","setReceiptShowToast","receiptToastMessage","setReceiptToastMessage","handlePdfAction","generateReceiptAndSubmit","useReceiptData","studentData","noiDungHoa","onSuccess","async","timer","setTimeout","clearTimeout","handleNoiDungChange","event","target","value","handleCheck","status","prev","newData","checkedFees","handlePaidAmount","handleDebt","default_amount","handleNote","handleFeeCode","newCode","handleFeeName","addNewRow","now","opening_debt_balance","remaining_amount","handleSubmitTransaction","message","formatCurrency","transactionData","noiDung","payload","invoice_id","invoice_details","transaction_data","month","pending_invoice_id","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","result","json","parseFloat","toLocaleString","_jsxs","className","children","_jsx","Spinner","Button","variant","color","onClick","XMarkIcon","canViewReceipt","some","Suspense","fallback","onBack","onNoiDungChange","disabled","Toast","React"],"sourceRoot":""}